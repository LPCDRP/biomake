#-*- makefile -*-
#
# File: Makefile.BROAD_rnaseq
#
# Description: make implementation of the BROAD RNASeq pipeline
# developed by the Regev lab
#

# General settings
FASTQ_SUFFIX=.P.qtrim.fq
TOPHAT2_OPTION_OUTPUT_DIR=TOPHAT
CUFFLINKS_OPTION_OUTPUT_DIR=CUFFLINKS

# Targets

RSEM_TARGETS=$(foreach s,$(SAMPLES),$(s)/$(s).rsem)
TOPHAT2_TARGETS=$(foreach s,$(SAMPLES),$(s)/$(s).tophat2)
CUFFLINKS_TARGETS=$(foreach s,$(SAMPLES),$(s)/$(s).cufflinks)
CUFFLINKS_QUANT_TARGETS=$(foreach s,$(SAMPLES),$(s)/$(s).cufflinks_quant)
RNASEQC_TARGETS=$(foreach s,$(SAMPLES),$(s)/$(TOPHAT2_OPTION_OUTPUT_DIR)/accepted_hits.rg.resorted.dup.rnaseqc)

TARGETS=$(RSEM_TARGETS) $(TOPHAT2_TARGETS) $(CUFFLINKS_TARGETS) $(CUFFLINKS_QUANT_TARGETS) $(RNASEQC_TARGETS)
TARGET_NAME=all

# See phony targets after include statements

# Batched SLURM submission:
#
# 1. partition target list into batch sized lists
#
# 2. submit each list independently, tracking the SLURM id
#
# 3. submit the merge target, with the tracked SLURM ids as
#    dependencies
#
ifndef RNASEQ_BATCH_SIZE
RNASEQ_BATCH_SIZE=8
endif
rnaseq-sbatch:
	@echo Running rnaseq-sbatch recipe: submit data to queue manager
	@echo All sample targets: $(TARGETS)
	@echo All samples: $(SAMPLES)
	@$(eval NTARGETS=$(shell echo $(SAMPLES) | awk '{print NF}'))
	@i=0; sbatchcounter=0; SAMPLELIST=; JOBNAMES=""; for SMP in $(SAMPLES); do \
	let i=i+1; \
	SAMPLELIST="$$SAMPLELIST$$SMP "; \
	if [ $$(($$i % $(RNASEQ_BATCH_SIZE))) == 0 ] || [ $$i == $(NTARGETS) ]; then  \
	let sbatchcounter=sbatchcounter+1; \
	$(MAKE) rnaseq-$$sbatchcounter.sbatch SLURM_COMMAND="$(MAKE) -j $(SLURM_MAKE_J) $(SLURM_MAKE_OPTIONS) $(TARGET_NAME) SAMPLES=\'$$SAMPLELIST\'" SLURM_OUT=rnaseq-$$sbatchcounter.out SLURM_ERR=rnaseq-$$sbatchcounter.err ;\
	$(MAKE) BROAD_rnaseq-settings SLURM_COMMAND="$(MAKE) -j $(SLURM_MAKE_J) $(SLURM_MAKE_OPTIONS) $(TARGET_NAME) SAMPLES=\'$$SAMPLELIST\'" SLURM_OUT=rnaseq-$$sbatchcounter.out SLURM_ERR=rnaseq-$$sbatchcounter.err > BROAD_rnaseq-$$sbatchcounter.settings; \
	$(MAKE) -pn rnaseq-$$sbatchcounter.sbatch SLURM_COMMAND="$(MAKE) -j $(SLURM_MAKE_J) $(SLURM_MAKE_OPTIONS) $(TARGET_NAME) SAMPLES=\'$$SAMPLELIST\'" SLURM_OUT=rnaseq-$$sbatchcounter.out SLURM_ERR=rnaseq-$$sbatchcounter.err >> BROAD_rnaseq-$$sbatchcounter.settings; \
	JOBNAMES="$$JOBNAMES,rnaseq-$$sbatchcounter"; \
	SAMPLELIST=; \
	fi \
	done ; 

# Add sbatch submission of entire pipeline with waitfor requirements
# based on the submitted jobs above. I have not figured out how to get
# the JOBIDS easily from slurm output though.

# JOBIDS=$(shell `jobinfo -n $$JOBNAMES -u $(SLURM_USER) | $(GREP) $(SLURM_ACCOUNT) | $(AWK) '{print $$1}' `); \

# Clean
CLEANTARGETS=$(wildcard *.fifo) $(wildcard */*.fifo)
clean:
	rm -f $(CLEANTARGETS)

##############################
# settings
##############################
.PHONY: %.log rnaseq all BROAD_rnaseq-settings BROAD_rnaseq-header

print-%:
	@echo '$*=$($*)'

BROAD_rnaseq-header:
	@echo -e "\nMakefile.BROAD_rnaseq options"
	@echo "====================="

BROAD_rnaseq-targets:
	@echo -e "\nrnaseq targets"
	@echo "---------------------"

print-TARGETS:
	@echo -e '\nTARGETS=$(TARGETS)'

BROAD_rnaseq-settings: BROAD_rnaseq-header print-RNASEQ_BATCH_SIZE

##############################
# Include files
#
# These are and should be put last since we use ifndef statements to
# check if options have been set. The included options should be the
# last resort.
#
##############################
# The directory where general makefiles reside
MAKEDIR = $(subst pipelines/,, $(dir $(lastword $(MAKEFILE_LIST))))

# Makefile includes
include $(MAKEDIR)Makefile.ngsvars
include $(MAKEDIR)Makefile.general
include $(MAKEDIR)Makefile.sequenceprocessing
include $(MAKEDIR)Makefile.tuxedo
include $(MAKEDIR)Makefile.rnaseq
include $(MAKEDIR)Makefile.sratools
include $(MAKEDIR)Makefile.picard

# Precious files
.PRECIOUS: %$(READ1_LABEL)$(FASTQ_SUFFIX).gz %$(READ2_LABEL)$(FASTQ_SUFFIX).gz %.rsem %.tophat2 %.cufflinks %.cufflinks_quant %/$(TOPHAT2_OPTION_OUTPUT_DIR)/accepted_hits.bam

# Target rules
rsem: $(RSEM_TARGETS)

tophat2: $(TOPHAT2_TARGETS)

cufflinks: $(CUFFLINKS_TARGETS)

cufflinks_quant: $(CUFFLINKS_QUANT_TARGETS)

%/$(TOPHAT2_OPTION_OUTPUT_DIR)/accepted_hits.bam: $(TOPHAT2_TARGETS)
	echo "Checkpoint that all tophat2 targets have been completed before running rnaseqc"

rnaseqc_targets: $(RNASEQC_TARGETS)

all: rsem tophat2 cufflinks cufflinks_quant rnaseqc_targets

##############################
# Overridden and new recipes
##############################

