#-*- makefile -*-
#
# File: Makefile.rnaseq
#
# Description: rnaseq make general rules
#

##############################
# RSEM
##############################
ifndef RSEM_HOME
RSEM_HOME=.
endif
ifndef RSEM_OPTIONS
RSEM_OPTIONS=
endif
# NB: this is not a fasta reference! This file needs to be prepared by RSEM_PREPARE_REFERENCE
ifndef RSEM_REFERENCE_NAME
RSEM_REFERENCE_NAME=
endif
ifndef RSEM_THREADS
RSEM_THREADS=$(THREADS)
endif

# rsem-prepare-reference
ifndef RSEM_PREPARE_REFERENCE
RSEM_PREPARE_REFERENCE=$(RSEM_HOME)/rsem-prepare-reference
endif
ifndef RSEM_PREPARE_REFERENCE_OPTIONS
RSEM_PREPARE_REFERENCE_OPTIONS=
endif
ifndef RSEM_PREPARE_REFERENCE_OPTION_REF
RSEM_PREPARE_REFERENCE_OPTION_REF=$(REF)
endif

$(RSEM_REFERENCE_NAME).transcripts.fa: $(RSEM_PREPARE_REFERENCE_OPTION_REF)
	$(RSEM_PREPARE_REFERENCE) $(RSEM_PREPARE_REFERENCE_OPTIONS) $< $*

# rsem-calculate-expression
ifndef RSEM_CALCULATE_EXPRESSION
RSEM_CALCULATE_EXPRESSION=$(RSEM_HOME)/rsem-calculate-expression
endif
ifndef RSEM_CALCULATE_EXPRESSION_OPTIONS
RSEM_CALCULATE_EXPRESSION_OPTIONS=--no-bam-output --bowtie-chunkmbs 512 
endif
# Hack to work with bowtie: See http://atgcio.blogspot.se/2013/08/fifos-and-mapping-with-bowtie-using.html
%.rsem: %$(READ1_LABEL)$(FASTQ_SUFFIX).gz %$(READ2_LABEL)$(FASTQ_SUFFIX).gz 
	mkfifo $(dir $(word 1, $^))read1.fifo
	mkfifo $(dir $(word 2, $^))read2.fifo
	zcat $(word 1, $^) > $(dir $(word 1, $^))read1.fifo &
	zcat $(word 2, $^) > $(dir $(word 2, $^))read2.fifo &
	$(RSEM_CALCULATE_EXPRESSION) $(RSEM_CALCULATE_EXPRESSION_OPTIONS) -p $(RSEM_THREADS) --paired-end read1.fifo read2.fifo $(RSEM_REFERENCE_NAME) $* &> $@.tmp && mv $@.tmp $@
	rm -f $(dir $(word 1, $^))read1.fifo $(dir $(word 2, $^))read2.fifo


##############################
# RNASeqQC
##############################
ifndef RNASEQC_HOME
RNASEQC_HOME=.
endif
ifndef RNASEQC_OPTIONS
RNASEQC_OPTIONS=-n 1000
endif
ifndef RNASEQC_JAVA_MEM
RNASEQC_JAVA_MEM=$(JAVA_MEM)
endif
ifndef RNASEQC_JAR
RNASEQC_JAR=$(RNASEQC_HOME)/RNA-SeQC.jar
endif
ifndef RNASEQC_JAVA_TMPDIR
RNASEQC_JAVA_TMPDIR=$(JAVA_TMPDIR)
endif
ifndef RNASEQC_COMMAND
RNASEQC_COMMAND=java -Xmx$(RNASEQC_JAVA_MEM) -Djava.io.tmpdir=$(RNASEQC_JAVA_TMPDIR) -jar $(RNASEQC_JAR)
endif
ifndef RNASEQC_OPTION_TRANSCRIPT_ANNOT_GTF
RNASEQC_OPTION_TRANSCRIPT_ANNOT_GTF=$(TRANSCRIPT_ANNOT_GTF)
endif
ifndef RNASEQC_OPTION_REF
RNASEQC_OPTION_REF=$(REF)
endif
ifndef RNASEQC_OPTION_BWArRNA
RNASEQC_OPTION_BWArRNA=
endif
ifneq ($(RNASEQC_OPTION_TRANSCRIPT_ANNOT_GTF),)
RNASEQC_OPTIONS+=-t $(RNASEQC_OPTION_TRANSCRIPT_ANNOT_GTF)
endif
ifneq ($(RNASEQC_OPTION_REF),)
RNASEQC_OPTIONS+=-r $(RNASEQC_OPTION_REF)
endif
ifneq ($(RNASEQC_OPTION_BWArRNA),)
RNASEQC_OPTIONS+=-r $(RNASEQC_OPTION_BWArRNA)
endif

# RNASEQC uses tophat alignments as input
%.rnaseqc: %.bam %.bai
	$(RNASEQC_COMMAND) $(RNASEQC_OPTIONS) -o $@.tmp -s "sample|$<|rnaseqQC" && mv $@.tmp $@

##############################
# settings
##############################
.PHONY: rsem-settings rnaseq-header
.PRECIOUS: 

print-%:
	@echo '$*=$($*)'

rnaseq-header:
	@echo -e "\nMakefile.rnaseq options"
	@echo "===================="


rnaseq-settings: rnaseq-header
