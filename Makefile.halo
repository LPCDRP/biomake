#-*- makefile -*-
#
# File: Makefile.halo
#
# Description: halo pipeline make rules
#

# The directory of this makefile
MAKEDIR = $(dir $(lastword $(MAKEFILE_LIST)))
ifeq ($(findstring Makefile.ngsvars,$(MAKEFILE_LIST)),)
include $(MAKEDIR)Makefile.ngsvars
endif

include $(MAKEDIR)/Makefile.general
include $(MAKEDIR)/Makefile.sequenceprocessing
include $(MAKEDIR)/Makefile.samtools
include $(MAKEDIR)/Makefile.bwa
include $(MAKEDIR)/Makefile.picard
include $(MAKEDIR)/Makefile.gatk

# Output name
ifndef HALO_TARGET_PREFIX
HALO_TARGET_PREFIX=halo
endif

# Input label
MERGE_INPUT_SUFFIX=.sort.rg.bam

# Targets
TRIMSYNC_TARGETS=$(subst .fastq.gz,.trimmed.sync.fastq.gz,$(FASTQFILES))
FLOWCELL_TARGETS=$(subst $(READ1_LABEL).fastq.gz,$(MERGE_INPUT_SUFFIX),$(FASTQFILES))
SAMPLE_TARGETS=$(foreach s,$(SAMPLES),$(s)/$(s).sort.merge.realign.recal.clip.bam)

# Target rules
trimsync: $(TRIMSYNC_TARGETS)
flowcells: $(FLOWCELL_TARGETS)
samples: $(SAMPLE_TARGETS)

$(HALO_TARGET_PREFIX).bam: $(SAMPLE_TARGETS)
	$(PICARD_JAVA) $(PICARD_HOME)/MergeSamFiles.jar $(addprefix INPUT=,$(SAMPLE_TARGETS)) O=$@.tmp $(PICARD_OPTIONS) $(PICARD_MERGESAM_OPTIONS) && mv $@.tmp $@ && mv $@.tmp.bai $(@:.bam=).bai

halo: all

all: $(HALO_TARGET_PREFIX).filtered.eval_metrics

##############################
# bwa alignment
##############################
# Redefine bam recipe to get correct file suffixes
# Only define bam rule - use pipe to avoid unnecessary sam file creation
%.bam: %$(READ1_LABEL).trimmed.sync.fastq.gz %$(READ2_LABEL).trimmed.sync.fastq.gz
	$(BWA) mem $(BWA_OPTIONS) $(BWA_REF) $^ | $(SAMTOOLS) view -Sbh - > $@.tmp && mv $@.tmp $@

# Add read group information
# This rule is so specific it is kept here
%.sort.rg.bam: %.sort.bam
	java -Xmx2g -jar $(PICARD_HOME)/AddOrReplaceReadGroups.jar INPUT=$< OUTPUT=$@.tmp SORT_ORDER=coordinate \
	RGID=$(firstword $(subst ., ,$*)) RGLB=lib RGPL=ILLUMINA RGPU=$(firstword $(subst ., ,$*)) \
	RGSM=$(firstword $(subst /, ,$(firstword $(subst ., ,$*)))) CREATE_INDEX=true && mv $@.tmp $@; mv $@.tmp.bai $(@.bam=).bai


##############################
# Merge rule 
##############################
# The following rule has as requirement *all* flowcells, but the input
# files to a given merge operation are the sample-specific bam files
%.sort.merge.bam: $(FLOWCELL_TARGETS)
	@$(eval INPUTFILES=$(addprefix INPUT=,$(filter $(dir $*)%, $(FLOWCELL_TARGETS))))
	$(PICARD_JAVA) $(PICARD_HOME)/MergeSamFiles.jar $(INPUTFILES) O=$@.tmp $(PICARD_COMMON_OPTIONS) $(PICARD_MERGESAM_OPTIONS) && mv $@.tmp $@ && mv $@.tmp.bai $(@:.bam=).bai

##############################
# 1. Raw genotypes
# For identification of realignment target regions
##############################
ifndef GATK_UNIFIEDGENOTYPER_RAW_OPTIONS
GATK_UNIFIEDGENOTYPER_RAW_OPTIONS=-stand_call_conf 30.0 -stand_emit_conf 10.0  --downsample_to_coverage 30 --output_mode EMIT_VARIANTS_ONLY -glm BOTH -nt $(GATK_THREADS) -R $(GATK_REF)
ifneq ($(GATK_DBSNP),"")
GATK_UNIFIEDGENOTYPER_RAW_OPTIONS+=--dbsnp $(GATK_DBSNP)
endif
ifneq ($(GATK_TARGET_REGIONS),"")
GATK_UNIFIEDGENOTYPER_RAW_OPTIONS+=-L $(GATK_TARGET_REGIONS)
endif
endif

%.sort.merge.raw.vcf: %.sort.merge.bam
	$(GATK_COMMAND) -T UnifiedGenotyper $(GATK_UNIFIEDGENOTYPER_RAW_OPTIONS) -I $< -o $@.tmp && mv $@.tmp $@  && mv $@.tmp.idx $@.idx

# 2. Realignment target creator

# 3. Indel realignment around known positions
%.merge.realign.bam: %.merge.bam %.merge.intervals %.merge.raw.vcf
	$(GATK_COMMAND) -T IndelRealigner $(GATK_INDELREALIGNER_OPTIONS) -I $< -known $(word 3, $^) -o $@.tmp --targetIntervals $(word 2, $^) && mv $@.tmp $@  && mv $@.tmp.bai $@.bai

# 4. Recalibration

# 5. Clipping
GATK_CLIPREADS_OPTIONS=--cyclesToTrim 1-5 --clipRepresentation WRITE_NS -R $(GATK_REF)

# 6. Generic genotyping
GATK_UNIFIEDGENOTYPER_OPTIONS=-stand_call_conf 30.0 -stand_emit_conf 10.0  --downsample_to_coverage 100 --output_mode EMIT_VARIANTS_ONLY -glm BOTH -nt $(GATK_THREADS) -R $(GATK_REF) --dbsnp $(GATK_DBSNP) -L $(GATK_TARGET_REGIONS)

# 7. Variant filtration - set specific options for Haloplex
GATK_VARIANTFILTRATION_OPTIONS=--clusterWindowSize 10 --clusterSize 3 --filterExpression "MQ0 >= 4 && ((MQ0 / (1.0 * DP)) > 0.1)" --filterName "HARD_TO_VALIDATE" --filterExpression "DP < 10" --filterName "LowCoverage" --filterExpression "QUAL < 30.0" --filterName "VeryLowQual" --filterExpression "QUAL > 30.0 && QUAL < 50.0" --filterName "LowQual" --filterExpression "QD < 1.5" --filterName "LowQD"

# 8. Variant evaluation
GATK_VARIANT_EVAL_OPTIONS=-ST Filter -l INFO --doNotUseAllStandardModules --evalModule CompOverlap --evalModule CountVariants --evalModule GenotypeConcordance --evalModule TiTvVariantEvaluator --evalModule ValidationReport --stratificationModule Filter

##################################################
# Precious 
##################################################
.PRECIOUS: %.bai  %.trimmed.sync.fastq.gz %.vcf %.sort.merge.raw.vcf %.filtered.vcf

# Clean
CLEANTARGETS:=$(wildcard $(SAMPLE_PREFIX)*/*/*trimmed*) $(wildcard $(SAMPLE_PREFIX)*/*/*bam*) $(wildcard $(SAMPLE_PREFIX)*/*/*metrics) $(wildcard $(SAMPLE_PREFIX)*/*merge*) all.*
clean:
	rm -f $(CLEANTARGETS)

##############################
# settings
##############################
.PHONY: trimsync flowcells samples %.log halo all halo-settings halo-header

print-%:
	@echo '$*=$($*)'

halo-header:
	@echo -e "\nMakefile.halo options"
	@echo "====================="

halo-settings: halo-header print-HALO_TARGET_PREFIX print-GATK_UNIFIEDGENOTYPER_RAW_OPTIONS general-settings ngsvars-settings sequenceprocessing-settings samtools-settings bwa-settings picard-settings gatk-settings 

